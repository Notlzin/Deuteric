# final step. the Makefile. #

# ========================================================== #
# pacman/Makefile #
# Builds both .pyd (Cython) and .dll (native fake libs) #
# ========================================================== #

PY = python
# BUILD_PYX = $(PY) setup.py build_ext --inplace
# no more of that now LOL #

# compiler (MinGW recommended for Windows) #
CC = gcc
CFLAGS_DLL = -shared -s -O2

# directories [including the dir in pacman folder] #
FAKE_PYX_DIR = fakebins_py
FAKE_C_DIR = fakebins_c

# fake binaries list #
FAKE_DLLS = kernel32 shell32 gfx_drv

.PHONY: all build fakedlls clean

all: build fakedlls

# ---------------------------------------------------------- #
# Step 1: Build Cython extensions (.pyx -> .pyd/.so) #
# ---------------------------------------------------------- #
build:
	@echo "[Deuteric::Cython] Building Cython extensions (.pyx -> .pyd/.so) from $(FAKE_PYX_DIR)"
	$(BUILD_PYX)
	@echo "[Deuteric::Cython] Build complete."

# ---------------------------------------------------------- #
# Step 2: Build native fake DLLs (.c -> .dll/.so) #
# ---------------------------------------------------------- #
fakedlls:
	@echo "[Deuteric::Linker] building native fake .dll's from $(FAKE_C_DIR)"
ifeq ($(OS),Windows_NT)
	$(CC) $(CFLAGS_DLL) -o kernel32.dll $(FAKE_C_DIR)/kernel32.c
	$(CC) $(CFLAGS_DLL) -o shell32.dll $(FAKE_C_DIR)/shell32.c
	$(CC) $(CFLAGS_DLL) -o gfx_drv.dll $(FAKE_C_DIR)/gfx_drv.c
else
	$(CC) $(CFLAGS_DLL) -o libkernel32.so $(FAKE_C_DIR)/kernel32.c
	$(CC) $(CFLAGS_DLL) -o libshell32.so $(FAKE_C_DIR)/shell32.c
	$(CC) $(CFLAGS_DLL) -o libgfx_drv.so $(FAKE_C_DIR)/gfx_drv.c
endif
	@echo "[Deuteric::Linker] native .dll's built."

# ---------------------------------------------------------- #
# Step 3: Clean up build artifacts #
# ---------------------------------------------------------- #
clean:
	@echo "[Deuteric::cleaner] cleaning all the build artifacts..."
	-rm -rf build
	-find . -type f -name "*.so" -delete || true
	-find . -type f -name "*.pyd" -delete || true
	-find . -type f -name "*.pyc" -delete || true
	-find . -type d -name "__pycache__" -exec rm -rf {} +
	@echo "[Deuteric::cleaner] cleaner complete cleaning artifacts."

# ----------------------------------------------------------
# this is not a system Makefile. it's a ritual. [GPT-5mini]
# its not GPT-5mini ITS NOT.					[me]
# ----------------------------------------------------------

# yes this is vibe-coded and generated by GPT but i'll try changing some part #
